// Copyright (c) 2024 Nordic Semiconductor ASA
// SPDX-License-Identifier: Apache-2.0

/dts-v1/;
#include <nordic/nrf52832_qfaa.dtsi>
#include "open_scoreboard_nrf52832-pinctrl.dtsi"
#include <zephyr/dt-bindings/gpio/gpio.h>

/ {
	model = "Open Scoreboard nRF52832";
	compatible = "phirks,open-scoreboard-nrf52832";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	zephyr,user {
		segment_d_ctrl_pin-gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
		piezo_pin-gpios = <&gpio0 1 0>;
		segment_e_ctrl_pin-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
		
		segment_c_ctrl_pin-gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;
		segment_a_ctrl_pin-gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
		segment_b_ctrl_pin-gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
		segment_g_ctrl_pin-gpios = <&gpio0 29 GPIO_ACTIVE_LOW>;
		segment_f_ctrl_pin-gpios = <&gpio0 27 GPIO_ACTIVE_LOW>;

		red_bttm_ctrl_pin-gpios = <&gpio0 30 0>;
		green_bttm_ctrl_pin-gpios = <&gpio0 4 0>;
		blue_bttm_ctrl_pin-gpios = <&gpio0 31 0>;

		red_bttm_ctrl_2_pin-gpios = <&gpio0 11 0>;
		blue_bttm_ctrl_2_pin-gpios = <&gpio0 12 0>;
		green_bttm_ctrl_2_pin-gpios = <&gpio0 8 0>;
		
		// red_left_ctrl_pin-gpios = <&gpio0 18 0>;
		// green_left_ctrl_pin-gpios = <&gpio0 17 0>;
		// blue_left_ctrl_pin-gpios = <&gpio0 16 0>;

		// red_left_ctrl_2_pin-gpios = <&gpio0 15 0>;
		// green_left_ctrl_2_pin-gpios = <&gpio0 13 0>
		// blue_left_ctrl_2_pin-gpios = <&gpio0 14 0>;

		// red_right_ctrl_pin-gpios = <&gpio0 20 0>;
		// green_right_ctrl_pin-gpios = <&gpio0 23 0>;
		// blue_right_ctrl_pin-gpios = <&gpio0 22 0>;
		
		// red_right_ctrl_2_pin-gpios = <&gpio0 24 0>;
		// green_right_ctrl_2_pin-gpios = <&gpio0 6 0>;
		// blue_right_ctrl_2_pin-gpios = <&gpio0 7 0>;
	};

	buttons {
		compatible = "gpio-keys";
		mode_button {
			label = "mode_button";
			gpios = <&gpio0 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};

		left_button {
			label = "left_button";
			gpios = <&gpio0 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};

		right_button {
			label = "right_button";
			gpios = <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
	};
	pwm_rgb {
		compatible = "pwm-leds";
		pwm_rl1: pwm_rl1 {
			pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_gl1: pwm_gl1 {
			pwms = <&pwm1 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_bl1: pwm_bl1 {
			pwms = <&pwm2 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_rl2: pwm_rl2 {
			pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_gl2: pwm_gl2 {
			pwms = <&pwm1 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_bl2: pwm_bl2 {
			pwms = <&pwm2 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_rr1: pwm_rr1 {
			pwms = <&pwm0 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_gr1: pwm_gr1 {
			pwms = <&pwm1 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_br1: pwm_br1 {
			pwms = <&pwm2 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_rr2: pwm_rr2 {
			pwms = <&pwm0 3 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_gr2: pwm_br2 {
			pwms = <&pwm1 3 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		pwm_br2: pwm_gr2 {
			pwms = <&pwm2 3 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
	};
	aliases {
		watchdog0 = &wdt0;
	};

	// sw_pwm: sw-pwm {
	// 	compatible = "nordic,nrf-sw-pwm";
    // 	status ="okay";
    // 	channel-gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;
    // 	clock-prescaler = <0>;
    // 	generator = <&timer2>;
	// 	#pwm-cells = <3>;
	// };
};




&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
	pinctrl-names = "default", "sleep";
};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default>;
	pinctrl-1 = <&pwm1_sleep>;
	pinctrl-names = "default", "sleep";
};

&pwm2 {
	status = "okay";
	pinctrl-0 = <&pwm2_default>;
	pinctrl-1 = <&pwm2_sleep>;
	pinctrl-names = "default", "sleep";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x0 0xc000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0xc000 0x32000>;
		};
		slot1_partition: partition@3e000 {
			label = "image-1";
			reg = <0x3e000 0x32000>;
		};
		scratch_partition: partition@70000 {
			label = "image-scratch";
			reg = <0x70000 0xa000>;
		};
		storage_partition: partition@7a000 {
			label = "storage";
			reg = <0x7a000 0x6000>;
		};
	};
};





&gpio0 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&pwm0_default {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 18)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 15)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 20)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 24)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
};

&pwm0_sleep {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 18)>;
		bias-pull-up;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 15)>;
		bias-pull-up;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 20)>;
		bias-pull-up;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 24)>;
		bias-pull-up;
	};
};

&pwm2_default {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 17)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 13)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 23)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 6)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
};

&pwm2_sleep {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 17)>;
		bias-pull-up;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 13)>;
		bias-pull-up;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 23)>;
		bias-pull-up;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 6)>;
		bias-pull-up;
	};
};

&pwm1_default {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 16)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 14)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 22)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 7)>;
		bias-pull-up;
		/delete-property/ nordic,invert;
	};
};

&pwm1_sleep {
	group1 {
		psels = <NRF_PSEL(PWM_OUT0, 0, 16)>;
		bias-pull-up;
	};
	group2 {
		psels = <NRF_PSEL(PWM_OUT1, 0, 14)>;
		bias-pull-up;
	};
	group3 {
		psels = <NRF_PSEL(PWM_OUT2, 0, 22)>;
		bias-pull-up;
	};
	group4 {
		psels = <NRF_PSEL(PWM_OUT3, 0, 7)>;
		bias-pull-up;
	};
};


&timer1 {
	status = "okay";
};

&timer2 {
	status = "okay";
};
